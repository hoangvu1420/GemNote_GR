@page "/test"
@using GemNote.Web.Components.ReiewComponents
@using GemNote.Web.ViewModels.FlashcardViewModels
@using GemNote.Web.ViewModels.ReviewViewModels

<PageTitle>Test</PageTitle>

@inject IDialogService DialogService
@inject IToastService ToastService
@inject IJSRuntime JsRuntime

<FluentButton OnClick="OpenReviewDialogAsync">
	Open review dialog
</FluentButton>

@code {
	private readonly ReviewSessionVm _reviewSession = new ReviewSessionVm();

	public Test()
	{
		// Initialize the review session with 5 FlashcardVm objects
		_reviewSession.Flashcards =
		[
			new FlashcardVm { Id = 1, Front = "Front 1", Back = "Back 1", Interval = 1, RepetitionCount = 0, EaseFactor = 2.5, UnitId = 1, UnitName = "Unit 1" },
			new FlashcardVm { Id = 2, Front = "Front 2", Back = "Back 2", Interval = 2, RepetitionCount = 0, EaseFactor = 2.5, UnitId = 2, UnitName = "Unit 2" },
			new FlashcardVm { Id = 3, Front = "Front 3", Back = "Back 3", Interval = 3, RepetitionCount = 0, EaseFactor = 2.5, UnitId = 3, UnitName = "Unit 3" },
			new FlashcardVm { Id = 4, Front = "Front 4", Back = "Back 4", Interval = 4, RepetitionCount = 0, EaseFactor = 2.5, UnitId = 4, UnitName = "Unit 4" },
			new FlashcardVm { Id = 5, Front = "Front 5", Back = "Back 5", Interval = 5, RepetitionCount = 0, EaseFactor = 2.5, UnitId = 5, UnitName = "Unit 5" }
		];

		// Initialize the Reviews list as an empty list
		_reviewSession.Reviews = []; 

		// Update FlashcardCount and ReviewCount
		_reviewSession.FlashcardCount = _reviewSession.Flashcards.Count;
		_reviewSession.ReviewCount = _reviewSession.Reviews.Count;
	}

	private async Task OpenReviewDialogAsync()
	{
		var dialog = await DialogService.ShowDialogAsync<ReviewDialogComp>(_reviewSession, new DialogParameters()
			{
				Title = "Review",
				OnDialogResult = DialogService.CreateDialogCallback(this, HandleReviewDialog),
				Width = "fit-content",
				Height = "fit-content",
				TrapFocus = true,
				Modal = false
			});
		await dialog.Result;
	}

	private async Task HandleReviewDialog(DialogResult result)
	{
		if (result.Data is not null)
		{
			var reviewResult = (ReviewSessionVm)result.Data;
			ToastService.ShowSuccess($"{reviewResult.FlashcardCount} cards ; {reviewResult.ReviewCount} reviews");
		}
	}
}