@using GemNote.Web.ViewModels.SectionViewModels

@inject IToastService ToastService
@inject IDialogService DialogService

<style>
	.container {
		width: 100%;
		margin: 5px auto;
	}

	.acc-header {
		margin: 0 10px;
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
	}

	.acc-header-left {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		align-items: flex-start;
	}

	.acc-header-right {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
	}
</style>

<div class="container">
	<FluentAccordionItem ExpandedChanged="OnExpanded">
		<HeadingTemplate>
			<div class="acc-header">
				<div class="acc-header-left">
					<FluentLabel Typo="Typography.H4" Color="Color.Accent" Style="margin-bottom: 5px;">
						@(Section.Name)
					</FluentLabel>
					<FluentLabel Typo="Typography.Body">
						@(Section.Description ?? "No description")
					</FluentLabel>
				</div>
				<div class="acc-header-right">
					<FluentStack>
						<FluentLabel Typo="Typography.Body">
							@(Section.UnitQty > 0 ? Section.UnitQty + " units" : "No units")
						</FluentLabel>
					</FluentStack>
				</div>
			</div>
		</HeadingTemplate>
		<ChildContent>
			<FluentStack HorizontalAlignment="HorizontalAlignment.Right" Style="margin-bottom: 0.5rem;">
				<FluentButton IconEnd="@(new Icons.Regular.Size16.Edit())"
							  Appearance="Appearance.Neutral"
							  Title="Edit"
							  OnClick="HandleEdit">
				</FluentButton>

				<FluentButton Title="Delete" OnClick="HandleDelete">
					<FluentIcon Value="@(new Icons.Regular.Size16.Delete())" Color="Color.Error" />
				</FluentButton>
			</FluentStack>

			<FluentTreeView RenderCollapsedNodes=true>
				<FluentTreeItem InitiallySelected="true">Daisy</FluentTreeItem>
				<FluentTreeItem>Sunflower</FluentTreeItem>
				<FluentTreeItem>Rose</FluentTreeItem>
				<FluentDivider></FluentDivider>
				<FluentTreeItem>Petunia</FluentTreeItem>
				<FluentTreeItem>Tulip</FluentTreeItem>
			</FluentTreeView>

		</ChildContent>
	</FluentAccordionItem>
</div>

@code {
	[Parameter] public SectionVm Section { get; set; }
	[Parameter] public EventCallback<SectionVm> OnEdit { get; set; }
	[Parameter] public EventCallback<SectionVm> OnDelete { get; set; }

	private void OnExpanded(bool expanded)
	{
		if (expanded)
		{
			// Load sections
		}
	}

	private void HandleEdit()
	{
		if (OnEdit.HasDelegate)
		{
			OnEdit.InvokeAsync(Section);
		}
	}

	private async void HandleDelete()
	{
		if (OnDelete.HasDelegate)
		{
			await OnDelete.InvokeAsync(Section);
		}
	}
}